name: Build

on: [push]

env:
  # For Windows/Linux
  swift-version: "5.10.1"
  # For macOS
  xcode-version: "15.3"

# !! HERE BE DRAGONS !!
jobs:
  build:
    name: Build on ${{ matrix.os-name }} ${{ matrix.arch }} with ${{ format(startsWith(matrix.os, 'macos-') && 'Xcode {0}' || 'Swift {1}', env.xcode-version, env.swift-version) }}
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          os-name: Linux
          arch: x86_64
        - os: windows-latest
          os-name: Windows
          arch: x86_64
        - os: macos-latest
          os-name: macOS
          arch: aarch64
        - os: macos-13
          os-name: macOS
          arch: x86_64
    runs-on: ${{ matrix.os }}
    steps:
      # In an ideal world, we'd just use this action for all OSes.
      - if: ${{ matrix.os-name == 'Linux' }}
        uses: swift-actions/setup-swift@v2
        with:
          swift-version: ${{ env.swift-version }}
      # swift-actions/setup-swift does not support Windows
      # Watch this space: https://github.com/swift-actions/setup-swift/pull/676
      - if: ${{ matrix.os-name == 'Windows' }}
        uses: compnerd/gha-setup-swift@v0.2.3
        with:
          branch: swift-${{ env.swift-version }}-release
          tag: ${{ env.swift-version }}-RELEASE
      # Getting an "InOutToPointerExpr in unexpected position!" error when using setup-swift on macOS.
      # Absolutely no clue why. This action is the one GodotSwift uses for running its tests.
      - if: ${{ matrix.os-name == 'macOS' }}
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.xcode-version }}
      - uses: actions/checkout@v4
      - name: Build
        run: swift build --package-path src/AudioPreviewGD
      - name: Test
        run: swift test --package-path src/AudioPreviewGD
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}
          if-no-files-found: error
          path: |
            src/AudioPreviewGD/.build/debug/*.so
            src/AudioPreviewGD/.build/debug/*.dylib
            src/AudioPreviewGD/.build/debug/*.dll
  bundle:
    name: Generate bundle
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - run: |
          mkdir addons/audio_preview_gd/bin
          cp ubuntu-latest/libAudioPreviewGD.so windows-latest/AudioPreviewGD.dll addons/audio_preview_gd/bin
          cp macos-latest/libAudioPreview.dylib addons/audio_preview_gd/bin/libAudioPreview-aarch64.dylib
          cp macos-13/libAudioPreview.dylib addons/audio_preview_gd/bin/libAudioPreview-x86_64.dylib
      - uses: actions/upload-artifact@v4
        with:
          name: bundle
          path: addons
          compression-level: 9
